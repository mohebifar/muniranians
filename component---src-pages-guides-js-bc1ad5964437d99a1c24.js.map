{"version":3,"sources":["webpack:///component---src-pages-guides-js-bc1ad5964437d99a1c24.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/pages/guides.js"],"names":["webpackJsonp","82","module","exports","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","fetch","e","viewClasses","obj","DataView","isView","call","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","416","__webpack_require__","_interopRequireDefault","__esModule","default","_taggedTemplateLiteralLoose2","_taggedTemplateLiteralLoose3","_templateObject","_templateObject2","_react","_react2","_styledComponents","_styledComponents2","_reactFontawesome","_reactFontawesome2","_reactHelmet","_reactHelmet2","_gatsbyLink","_gatsbyLink2","_Layout","Jumbotron","styled","div","Button","GatsbyLink","links","title","path","icon","GuidesPage","createElement","content","className","Container","Panel","Flex","flexDirection","wrap","flexJustifyContent","_ref","Box","width","p","to","style","marginBottom","propTypes"],"mappings":"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","file":"component---src-pages-guides-js-bc1ad5964437d99a1c24.js","sourcesContent":["webpackJsonp([80228475665765],{\n\n/***/ 82:\n/***/ (function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n\t    // https://tools.ietf.org/html/rfc7230#section-3.2\n\t    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n\t    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status === undefined ? 200 : options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      } else if (request.credentials === 'omit') {\n\t        xhr.withCredentials = false\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _taggedTemplateLiteralLoose2 = __webpack_require__(12);\n\t\n\tvar _taggedTemplateLiteralLoose3 = _interopRequireDefault(_taggedTemplateLiteralLoose2);\n\t\n\tvar _templateObject = (0, _taggedTemplateLiteralLoose3.default)(['\\n  background-color: #8a9694;\\n  background-blend-mode: multiply;\\n  background-image: url(https://upload.wikimedia.org/wikipedia/commons/c/ce/New_Residence%2C_Memorial_University_of_Newfoundland.jpg);\\n  background-size: cover;\\n  background-position: center 30%;\\n  padding: 120px 0;\\n  text-align: center;\\n  color: white;\\n  margin-bottom: 50px;\\n  text-shadow: 0 0 25px #000;\\n\\n  h1 {\\n    font-weight: 400;\\n    font-size: 2.5em;\\n  }\\n\\n  h2 {\\n    font-weight: 300;\\n  }\\n'], ['\\n  background-color: #8a9694;\\n  background-blend-mode: multiply;\\n  background-image: url(https://upload.wikimedia.org/wikipedia/commons/c/ce/New_Residence%2C_Memorial_University_of_Newfoundland.jpg);\\n  background-size: cover;\\n  background-position: center 30%;\\n  padding: 120px 0;\\n  text-align: center;\\n  color: white;\\n  margin-bottom: 50px;\\n  text-shadow: 0 0 25px #000;\\n\\n  h1 {\\n    font-weight: 400;\\n    font-size: 2.5em;\\n  }\\n\\n  h2 {\\n    font-weight: 300;\\n  }\\n']),\n\t    _templateObject2 = (0, _taggedTemplateLiteralLoose3.default)(['\\n  display: block;\\n  text-align: center;\\n  border: 1px solid #dadada;\\n  border-radius: 5px;\\n  padding: 10px;\\n  color: #777;\\n\\n  > .icon {\\n    font-size: 3.5em;\\n    margin-bottom: 10px;\\n  }\\n\\n  &:hover {\\n    color: #40b7a1;\\n    border-color: #40b7a1;\\n  }\\n'], ['\\n  display: block;\\n  text-align: center;\\n  border: 1px solid #dadada;\\n  border-radius: 5px;\\n  padding: 10px;\\n  color: #777;\\n\\n  > .icon {\\n    font-size: 3.5em;\\n    margin-bottom: 10px;\\n  }\\n\\n  &:hover {\\n    color: #40b7a1;\\n    border-color: #40b7a1;\\n  }\\n']);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _styledComponents = __webpack_require__(14);\n\t\n\tvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\t\n\t__webpack_require__(82);\n\t\n\tvar _reactFontawesome = __webpack_require__(76);\n\t\n\tvar _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);\n\t\n\tvar _reactHelmet = __webpack_require__(108);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _gatsbyLink = __webpack_require__(93);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _Layout = __webpack_require__(27);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Jumbotron = _styledComponents2.default.div(_templateObject);\n\t\n\tvar Button = (0, _styledComponents2.default)(_gatsbyLink2.default)(_templateObject2);\n\t\n\tvar links = [{\n\t  title: 'اسکان و محل اقامت',\n\t  path: '/guides/accommodation',\n\t  icon: 'home'\n\t}, {\n\t  title: 'بانک و افتتاح حساب',\n\t  path: '/guides/banks',\n\t  icon: 'money'\n\t}, {\n\t  title: 'ورود به سینت‌جانز',\n\t  path: '/guides/coming-to-st-johns',\n\t  icon: 'plane'\n\t}, {\n\t  title: 'بیمه درمانی',\n\t  path: '/guides/health-insurance',\n\t  icon: 'user-md'\n\t}, {\n\t  title: 'حمل و نقل شهری',\n\t  path: '/guides/transportation',\n\t  icon: 'bus'\n\t}, {\n\t  title: 'جاذبه‌های گردشگری',\n\t  path: '/guides',\n\t  icon: 'tripadvisor'\n\t}];\n\t\n\tvar GuidesPage = function GuidesPage() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _reactHelmet2.default,\n\t      null,\n\t      _react2.default.createElement(\n\t        'title',\n\t        null,\n\t        '\\u0631\\u0627\\u0647\\u0646\\u0645\\u0627\\u06CC \\u0648\\u0631\\u0648\\u062F\\u06CC\\u200C\\u0647\\u0627\\u06CC \\u062C\\u062F\\u06CC\\u062F - \\u0645\\u0627\\u0646\\u200C\\u0627\\u06CC\\u0631\\u0627\\u0646\\u06CC\\u0627\\u0646'\n\t      ),\n\t      _react2.default.createElement('meta', { name: 'description', content: '\\u0631\\u0627\\u0647\\u0646\\u0645\\u0627\\u06CC \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u06CC\\u0646\\u062A\\u200C\\u062C\\u0627\\u0646\\u0632 \\u0646\\u06CC\\u0648\\u0641\\u0627\\u0648\\u0646\\u062F\\u0644\\u0646\\u062F \\u06A9\\u0627\\u0646\\u0627\\u062F\\u0627 \\u0628\\u0631\\u0627\\u06CC \\u062F\\u0627\\u0646\\u0634\\u062C\\u0648\\u06CC\\u0627\\u0646 \\u062C\\u062F\\u06CC\\u062F \\u062F\\u0627\\u0646\\u0634\\u06AF\\u0627\\u0647 \\u0645\\u0645\\u0648\\u0631\\u06CC\\u0627\\u0644' }),\n\t      _react2.default.createElement('meta', { name: 'keywords', content: 'Memorial University, Iranian, MUNIranians, Guide, Newcomers, Persian, \\u0631\\u0627\\u0647\\u0646\\u0645\\u0627\\u06CC \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u06A9\\u0627\\u0646\\u0627\\u062F\\u0627, \\u062D\\u0633\\u0627\\u0628 \\u0628\\u0627\\u0646\\u06A9\\u06CC \\u06A9\\u0627\\u0646\\u0627\\u062F\\u0627, \\u0628\\u0644\\u06CC\\u062A \\u06A9\\u0627\\u0646\\u0627\\u062F\\u0627, \\u0646\\u06CC\\u0648\\u0641\\u0627\\u0648\\u0646\\u062F\\u0644\\u0646\\u062F, Newfoundland' })\n\t    ),\n\t    _react2.default.createElement(\n\t      Jumbotron,\n\t      null,\n\t      _react2.default.createElement(\n\t        'h1',\n\t        { className: 'farsi' },\n\t        '\\u0631\\u0627\\u0647\\u0646\\u0645\\u0627\\u06CC \\u0648\\u0631\\u0648\\u062F\\u06CC\\u200C\\u0647\\u0627\\u06CC \\u062C\\u062F\\u06CC\\u062F'\n\t      ),\n\t      _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'Guides for Newcomers'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _Layout.Container,\n\t      null,\n\t      _react2.default.createElement(\n\t        _Layout.Panel,\n\t        null,\n\t        _react2.default.createElement(\n\t          _Layout.Flex,\n\t          { flexDirection: ['column', 'row', 'row'], wrap: 'wrap', flexJustifyContent: 'space-between' },\n\t          links.map(function (_ref) {\n\t            var path = _ref.path,\n\t                title = _ref.title,\n\t                icon = _ref.icon;\n\t            return _react2.default.createElement(\n\t              _Layout.Box,\n\t              { key: path, width: [1, 1 / 2, 1 / 2], p: [5, 5, 5] },\n\t              _react2.default.createElement(\n\t                Button,\n\t                { className: 'farsi', to: path },\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'icon' },\n\t                  _react2.default.createElement(_reactFontawesome2.default, { name: icon })\n\t                ),\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  null,\n\t                  title\n\t                )\n\t              )\n\t            );\n\t          })\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement('div', { style: { marginBottom: 50 } })\n\t  );\n\t};\n\t\n\tGuidesPage.propTypes = {};\n\t\n\texports.default = GuidesPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-guides-js-bc1ad5964437d99a1c24.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 82\n// module chunks = 80228475665765 224494088270459 280318466475678","import React from 'react'\nimport styled from 'styled-components'\nimport 'whatwg-fetch'\nimport Icon from 'react-fontawesome'\nimport Helmet from 'react-helmet'\nimport GatsbyLink from 'gatsby-link'\n\nimport { Container, Flex, Box, Panel } from '../components/Layout'\n\nconst Jumbotron = styled.div`\n  background-color: #8a9694;\n  background-blend-mode: multiply;\n  background-image: url(https://upload.wikimedia.org/wikipedia/commons/c/ce/New_Residence%2C_Memorial_University_of_Newfoundland.jpg);\n  background-size: cover;\n  background-position: center 30%;\n  padding: 120px 0;\n  text-align: center;\n  color: white;\n  margin-bottom: 50px;\n  text-shadow: 0 0 25px #000;\n\n  h1 {\n    font-weight: 400;\n    font-size: 2.5em;\n  }\n\n  h2 {\n    font-weight: 300;\n  }\n`\n\nconst Button = styled(GatsbyLink)`\n  display: block;\n  text-align: center;\n  border: 1px solid #dadada;\n  border-radius: 5px;\n  padding: 10px;\n  color: #777;\n\n  > .icon {\n    font-size: 3.5em;\n    margin-bottom: 10px;\n  }\n\n  &:hover {\n    color: #40b7a1;\n    border-color: #40b7a1;\n  }\n`\n\nconst links = [\n  {\n    title: 'اسکان و محل اقامت',\n    path: '/guides/accommodation',\n    icon: 'home',\n  },\n  {\n    title: 'بانک و افتتاح حساب',\n    path: '/guides/banks',\n    icon: 'money',\n  },\n  {\n    title: 'ورود به سینت‌جانز',\n    path: '/guides/coming-to-st-johns',\n    icon: 'plane',\n  },\n  {\n    title: 'بیمه درمانی',\n    path: '/guides/health-insurance',\n    icon: 'user-md',\n  },\n  {\n    title: 'حمل و نقل شهری',\n    path: '/guides/transportation',\n    icon: 'bus',\n  },\n  {\n    title: 'جاذبه‌های گردشگری',\n    path: '/guides',\n    icon: 'tripadvisor',\n  },\n]\n\nconst GuidesPage = () => (\n  <div>\n    <Helmet>\n      <title>راهنمای ورودی‌های جدید - مان‌ایرانیان</title>\n      <meta name=\"description\" content=\"راهنمای ورود به سینت‌جانز نیوفاوندلند کانادا برای دانشجویان جدید دانشگاه مموریال\" />\n      <meta name=\"keywords\" content=\"Memorial University, Iranian, MUNIranians, Guide, Newcomers, Persian, راهنمای ورود به کانادا, حساب بانکی کانادا, بلیت کانادا, نیوفاوندلند, Newfoundland\" />\n    </Helmet>\n    <Jumbotron>\n      <h1 className=\"farsi\">راهنمای ورودی‌های جدید</h1>\n      <h2>Guides for Newcomers</h2>\n    </Jumbotron>\n\n    <Container>\n      <Panel>\n        <Flex flexDirection={['column', 'row', 'row']} wrap=\"wrap\" flexJustifyContent=\"space-between\">\n          {\n            links.map(({ path, title, icon }) => (\n              <Box key={path} width={[1, 1 / 2, 1 /2 ]} p={[ 5, 5, 5 ]}>\n                <Button className=\"farsi\" to={path}>\n                  <div className=\"icon\">\n                    <Icon name={icon} />\n                  </div>\n                  <div>{title}</div>\n                </Button>\n              </Box>\n            ))\n          }\n        </Flex>\n      </Panel>\n    </Container>\n    <div style={{ marginBottom: 50 }} />\n  </div>\n)\n\nGuidesPage.propTypes = {\n}\n\nexport default GuidesPage\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/guides.js"],"sourceRoot":""}